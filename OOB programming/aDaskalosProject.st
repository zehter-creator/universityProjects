<?xml version="1.0"?>

<st-source>
<time-stamp>From VisualWorksÂ® NonCommercial, 7.4.1 of May 30, 2006 on May 1, 2023 at 8:17:57 pm</time-stamp>


<class>
<name>Person</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>name surname adress </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Person class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#name -&gt; Core.String); add: (#surname -&gt; Core.String); add: (#adress -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Person</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="adress">adress
"generated by Daskalos"

     ^adress</body>

<body package="DaskalosUserClasses" selector="adress:">adress: anObject
"generated by Daskalos"

     adress := (self checkValue: anObject forVariable: #adress)</body>

<body package="DaskalosUserClasses" selector="name">name
"generated by Daskalos"

     ^name</body>

<body package="DaskalosUserClasses" selector="name:">name: anObject
"generated by Daskalos"

     name := (self checkValue: anObject forVariable: #name)</body>

<body package="DaskalosUserClasses" selector="surname">surname
"generated by Daskalos"

     ^surname</body>

<body package="DaskalosUserClasses" selector="surname:">surname: anObject
"generated by Daskalos"

     surname := (self checkValue: anObject forVariable: #surname)</body>
</methods>

<methods>
<class-id>Person</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     name := nil.
     surname := nil.
     adress := nil.
</body>
</methods>


<class>
<name>Libarian</name>
<environment>Smalltalk</environment>
<super>Person</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>libarianNumber </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Libarian class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#surname -&gt; Core.String); add: (#libarianNumber -&gt; Core.Number); add: (#name -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Libarian</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="libarianNumber">libarianNumber
"generated by Daskalos"

     ^libarianNumber</body>

<body package="DaskalosUserClasses" selector="libarianNumber:">libarianNumber: anObject
"generated by Daskalos"

     libarianNumber := (self checkValue: anObject forVariable: #libarianNumber)</body>
</methods>

<methods>
<class-id>Libarian</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     libarianNumber := nil.
</body>
</methods>


<class>
<name>Member</name>
<environment>Smalltalk</environment>
<super>Person</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>accountNumber borrowedBooks </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Member class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#name -&gt; Core.String); add: (#surname -&gt; Core.String); add: (#accountNumber -&gt; Core.Number); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Member</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="accountNumber">accountNumber
"generated by Daskalos"

     ^accountNumber</body>

<body package="DaskalosUserClasses" selector="accountNumber:">accountNumber: anObject
"generated by Daskalos"

     accountNumber := (self checkValue: anObject forVariable: #accountNumber)</body>
</methods>

<methods>
<class-id>Member</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="hasBorrowedMaxBooks">hasBorrowedMaxBooks
	^borrowedBooks size &gt;= 3</body>

<body package="DaskalosUserClasses" selector="initialize">initialize
	"generated by Daskalos"

	super initialize.
	accountNumber := nil.
	borrowedBooks := nil.
	accountNumber := ''.
	borrowedBooks := Set new</body>
</methods>


<class>
<name>LibaryItem</name>
<environment>Smalltalk</environment>
<super>DaskalosDataObject</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>libaryAdress </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>LibaryItem class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#libaryAdress -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>LibaryItem</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     libaryAdress := nil.
</body>
</methods>

<methods>
<class-id>LibaryItem</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="libaryAdress">libaryAdress
"generated by Daskalos"

     ^libaryAdress</body>

<body package="DaskalosUserClasses" selector="libaryAdress:">libaryAdress: anObject
"generated by Daskalos"

     libaryAdress := (self checkValue: anObject forVariable: #libaryAdress)</body>
</methods>


<class>
<name>Rack</name>
<environment>Smalltalk</environment>
<super>LibaryItem</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>rackadress </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Rack class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#rackadress -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Rack</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="rackadress">rackadress
"generated by Daskalos"

     ^rackadress</body>

<body package="DaskalosUserClasses" selector="rackadress:">rackadress: anObject
"generated by Daskalos"

     rackadress := (self checkValue: anObject forVariable: #rackadress)</body>
</methods>

<methods>
<class-id>Rack</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     rackadress := nil.
</body>
</methods>


<class>
<name>Book</name>
<environment>Smalltalk</environment>
<super>LibaryItem</super>
<private>false</private>
<indexed-type>none</indexed-type>
<inst-vars>author borrowedBy reservedBy iSBN publicationDate title </inst-vars>
<class-inst-vars></class-inst-vars>
<imports></imports>
<category>DaskalosUserClasses</category>
<attributes>
<package>DaskalosUserClasses</package>
</attributes>
</class>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Book class</class-id> <category>instance variables behavior</category>

<body package="DaskalosUserClasses" selector="instVarTypes">instVarTypes
"resource for Daskalos"
^((Core.Dictionary new) add: (#title -&gt; Core.String); add: (#iSBN -&gt; Core.String); add: (#publicationDate -&gt; Core.Number); add: (#author -&gt; Core.String); add: (#reservedBy -&gt; Core.String); add: (#borrowedBy -&gt; Core.String); yourself)</body>
</methods>

<!-- -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -   -->


<methods>
<class-id>Book</class-id> <category>accessing</category>

<body package="DaskalosUserClasses" selector="author">author
"generated by Daskalos"

     ^author</body>

<body package="DaskalosUserClasses" selector="author:">author: anObject
"generated by Daskalos"

     author := (self checkValue: anObject forVariable: #author)</body>

<body package="DaskalosUserClasses" selector="borrowedBy">borrowedBy
"generated by Daskalos"

     ^borrowedBy</body>

<body package="DaskalosUserClasses" selector="borrowedBy:">borrowedBy: anObject
"generated by Daskalos"

     borrowedBy := (self checkValue: anObject forVariable: #borrowedBy)</body>

<body package="DaskalosUserClasses" selector="iSBN">iSBN
"generated by Daskalos"

     ^iSBN</body>

<body package="DaskalosUserClasses" selector="iSBN:">iSBN: anObject
"generated by Daskalos"

     iSBN := (self checkValue: anObject forVariable: #iSBN)</body>

<body package="DaskalosUserClasses" selector="publicationDate">publicationDate
"generated by Daskalos"

     ^publicationDate</body>

<body package="DaskalosUserClasses" selector="publicationDate:">publicationDate: anObject
"generated by Daskalos"

     publicationDate := (self checkValue: anObject forVariable: #publicationDate)</body>

<body package="DaskalosUserClasses" selector="reservedBy">reservedBy
"generated by Daskalos"

     ^reservedBy</body>

<body package="DaskalosUserClasses" selector="reservedBy:">reservedBy: anObject
"generated by Daskalos"

     reservedBy := (self checkValue: anObject forVariable: #reservedBy)</body>

<body package="DaskalosUserClasses" selector="title">title
"generated by Daskalos"

     ^title</body>

<body package="DaskalosUserClasses" selector="title:">title: anObject
"generated by Daskalos"

     title := (self checkValue: anObject forVariable: #title)</body>
</methods>

<methods>
<class-id>Book</class-id> <category>instance initialization</category>

<body package="DaskalosUserClasses" selector="initialize">initialize
"generated by Daskalos"

     super initialize.
     author := nil.
     borrowedBy := nil.
     reservedBy := nil.
     iSBN := nil.
     publicationDate := nil.
     title := nil.
</body>
</methods>

<methods>
<class-id>Book</class-id> <category>other methods</category>

<body package="DaskalosUserClasses" selector="isBorrowed">isBorrowed
	^borrowedBy notNil</body>

<body package="DaskalosUserClasses" selector="isReserved">isReserved
	^reservedBy notNil</body>
</methods>


</st-source>
